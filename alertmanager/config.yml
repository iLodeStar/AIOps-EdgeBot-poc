# Alertmanager configuration for EdgeBot
global:
  # Global settings for all notifications
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alertmanager@edgebot.local'
  resolve_timeout: 5m

# Templates for notifications
templates:
  - '/etc/alertmanager/*.tmpl'

# Route tree for determining where alerts should be sent
route:
  # Root route - all alerts pass through here
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'null'  # Default receiver (does nothing)
  
  routes:
    # Critical alerts - could be routed to PagerDuty, immediate notifications, etc.
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 0s
      repeat_interval: 30m
    
    # Warning alerts - could be routed to Slack, email, etc.  
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      repeat_interval: 4h

# Inhibition rules - suppress certain alerts when others are firing
inhibit_rules:
  # Suppress sink alerts when mothership is down
  - source_match:
      alertname: 'MothershipDown'
    target_match_re:
      alertname: '.*Writes.*'
    equal: ['job']
  
  # Suppress latency alerts when there are no events being processed
  - source_match:
      alertname: 'NoIngestEvents'
    target_match_re:
      alertname: 'High.*Latency.*'
    equal: ['job']

# Receivers define how to send notifications
receivers:
  # Null receiver - discards alerts (default for demo/development)
  - name: 'null'

  # Critical alerts receiver
  - name: 'critical-alerts'
    # Uncomment and configure for Slack notifications:
    # slack_configs:
    #   - api_url: 'YOUR_SLACK_WEBHOOK_URL_HERE'
    #     channel: '#alerts-critical'
    #     title: 'Critical Alert: {{ .GroupLabels.alertname }}'
    #     text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
    #     send_resolved: true
    
    # Uncomment and configure for email notifications:
    # email_configs:
    #   - to: 'ops-team@yourcompany.com'
    #     subject: 'CRITICAL: EdgeBot Alert'
    #     body: |
    #       {{ range .Alerts }}
    #       Alert: {{ .Annotations.summary }}
    #       Description: {{ .Annotations.description }}
    #       {{ end }}

  # Warning alerts receiver  
  - name: 'warning-alerts'
    # Uncomment and configure for Slack notifications:
    # slack_configs:
    #   - api_url: 'YOUR_SLACK_WEBHOOK_URL_HERE'
    #     channel: '#alerts-warnings'
    #     title: 'Warning: {{ .GroupLabels.alertname }}'
    #     text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
    #     send_resolved: true

# Configuration notes:
# 
# To enable Slack notifications:
# 1. Create a Slack webhook: https://api.slack.com/messaging/webhooks
# 2. Replace 'YOUR_SLACK_WEBHOOK_URL_HERE' with your webhook URL
# 3. Uncomment the slack_configs sections above
# 4. Restart Alertmanager: docker-compose restart alertmanager
#
# To enable email notifications:  
# 1. Configure the global SMTP settings above
# 2. Uncomment and configure the email_configs sections
# 3. Restart Alertmanager
#
# For PagerDuty, OpsGenie, and other integrations, see:
# https://prometheus.io/docs/alerting/latest/configuration/